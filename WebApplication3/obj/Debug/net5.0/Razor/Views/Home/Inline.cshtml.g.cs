#pragma checksum "C:\Users\Judi\Documents\GitHub\WebApplication3\WebDesign\WebApplication3\Views\Home\Inline.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b8893782478d073bbf86c3310d979caffeb27084"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Inline), @"mvc.1.0.view", @"/Views/Home/Inline.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Judi\Documents\GitHub\WebApplication3\WebDesign\WebApplication3\Views\_ViewImports.cshtml"
using WebApplication3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Judi\Documents\GitHub\WebApplication3\WebDesign\WebApplication3\Views\_ViewImports.cshtml"
using WebApplication3.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8893782478d073bbf86c3310d979caffeb27084", @"/Views/Home/Inline.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"463d1c12e8fc14b2589daa67feec3183fea97611", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Inline : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/bootstrap/dist/css/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/font-awesome/css/font-awesome.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/Ionicons/css/ionicons.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/dist/css/AdminLTE.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/dist/css/skins/_all-skins.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/bootstrap/dist/js/bootstrap.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/jquery-slimscroll/jquery.slimscroll.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/fastclick/lib/fastclick.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/dist/js/adminlte.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/dist/js/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/jquery-knob/js/jquery.knob.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/adminlte/components/jquery-sparkline/dist/jquery.sparkline.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\Judi\Documents\GitHub\WebApplication3\WebDesign\WebApplication3\Views\Home\Inline.cshtml"
  
    ViewData["Title"] = "Inline";
    Layout = "_Adminlte";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"">
    <!-- Content Header (Page header) -->
    <section class=""content-header"">
        <h1>
            Inline Charts
            <small>multiple types of charts</small>
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> Home</a></li>
            <li><a href=""#"">Charts</a></li>
            <li class=""active"">Inline Charts</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class=""content"">
        <!-- row -->
        <div class=""row"">
            <div class=""col-xs-12"">
                <!-- jQuery Knob -->
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <i class=""fa fa-bar-chart-o""></i>
                        <h3 class=""box-title"">jQuery Knob</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm"" data-w");
            WriteLiteral(@"idget=""collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body"">
                        <div class=""row"">
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"">
                                <div class=""knob-label"">New Visitors</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""70"" data-width=""90"" da");
            WriteLiteral(@"ta-height=""90"" data-fgColor=""#f56954"">
                                <div class=""knob-label"">Bounce Rate</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""-80"" data-min=""-150"" data-max=""150"" data-width=""90"" data-height=""90"" data-fgColor=""#00a65a"">
                                <div class=""knob-label"">Server Load</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""40"" data-width=""90"" data-height=""90"" data-fgColor=""#00c0ef"">
                                <div class=""knob-label"">Disk Space</div>
                            </div>
                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    ");
            WriteLiteral(@"    <div class=""row"">
                            <div class=""col-xs-6 text-center"">
                                <input type=""text"" class=""knob"" value=""90"" data-width=""90"" data-height=""90"" data-fgColor=""#932ab6"">
                                <div class=""knob-label"">Bandwidth</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 text-center"">
                                <input type=""text"" class=""knob"" value=""50"" data-width=""90"" data-height=""90"" data-fgColor=""#39CCCC"">
                                <div class=""knob-label"">CPU</div>
                            </div>
                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <div class=""row"">
            <div ");
            WriteLiteral(@"class=""col-xs-12"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <i class=""fa fa-bar-chart-o""></i>
                        <h3 class=""box-title"">jQuery Knob Different Sizes</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body"">
                        <div class=""row"">
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""k");
            WriteLiteral(@"nob"" value=""30"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"" data-readonly=""true"">
                                <div class=""knob-label"">data-width=""90""</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-width=""120"" data-height=""120"" data-fgColor=""#f56954"">
                                <div class=""knob-label"">data-width=""120""</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-thickness=""0.1"" data-width=""90"" data-height=""90"" data-fgColor=""#00a65a"">
                                <div class=""knob-label"">data-thickness=""0.1""</div>
                            </div>
                            <!-- ./col -->
                         ");
            WriteLiteral(@"   <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" data-thickness=""0.4"" data-angleArc=""250"" data-angleOffset=""-125"" value=""30°"" data-width=""120"" data-height=""120"" data-fgColor=""#00c0ef"">
                                <div class=""knob-label"">data-angleArc=""250""</div>
                            </div>
                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <i class=""fa fa-bar-chart-o""></i>
                        <h3 class=""box-title"">jQuery Knob Tron Style</h3>
                        <div class=""box-tools pull-right"">
");
            WriteLiteral(@"                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body"">
                        <div class=""row"">
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""80"" data-skin=""tron"" data-thickness=""0.2"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"" data-readonly=""true"">
                                <div class=""knob-label"">data-width=""90""</div>
                            </div>
                            <!-- ./col -->
                ");
            WriteLiteral(@"            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""60"" data-skin=""tron"" data-thickness=""0.2"" data-width=""120"" data-height=""120"" data-fgColor=""#f56954"">
                                <div class=""knob-label"">data-width=""120""</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""10"" data-skin=""tron"" data-thickness=""0.1"" data-width=""90"" data-height=""90"" data-fgColor=""#00a65a"">
                                <div class=""knob-label"">data-thickness=""0.1""</div>
                            </div>
                            <!-- ./col -->
                            <div class=""col-xs-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-skin=""tron"" data-thickness=""0.2"" data-angleArc=""250"" data-angleOffset=""-125"" data-wi");
            WriteLiteral(@"dth=""120"" data-height=""120"" data-fgColor=""#00c0ef"">
                                <div class=""knob-label"">data-angleArc=""250""</div>
                            </div>
                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <!-- callout -->
        <div class=""callout callout-info"">
            <h4>The following was created using data tags</h4>
            <p>The following three inline (sparkline) chart have been initialized to read and interpret data tags</p>
        </div>
        <!-- /.callout -->
        <div class=""row"">
            <div class=""col-md-4"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <h3 class=""box-title text-danger"">Sparkline Pie</h3>
                   ");
            WriteLiteral(@"     <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm""><i class=""fa fa-refresh""></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body text-center"">
                        <div class=""sparkline"" data-type=""pie"" data-offset=""90"" data-width=""100px"" data-height=""100px"">
                            6,4,8
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
            <div class=""col-md-4"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <h3 class=""box-title text-blue"">Sparkline line</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm""><i class=""fa fa-r");
            WriteLiteral(@"efresh""></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body text-center"">
                        <div class=""sparkline"" data-type=""line"" data-spot-Radius=""3"" data-highlight-Spot-Color=""#f39c12"" data-highlight-Line-Color=""#222"" data-min-Spot-Color=""#f56954"" data-max-Spot-Color=""#00a65a"" data-spot-Color=""#39CCCC"" data-offset=""90"" data-width=""100%"" data-height=""100px"" data-line-Width=""2"" data-line-Color=""#39CCCC"" data-fill-Color=""rgba(57, 204, 204, 0.08)"">
                            6,4,7,8,4,3,2,2,5,6,7,4,1,5,7,9,9,8,7,6
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
            <div class=""col-md-4"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <h3 class=""box-title text-warning"">Sparkline Bar");
            WriteLiteral(@"</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm""><i class=""fa fa-refresh""></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body text-center"">
                        <div class=""sparkline"" data-type=""bar"" data-width=""97%"" data-height=""100px"" data-bar-Width=""14"" data-bar-Spacing=""7"" data-bar-Color=""#f39c12"">
                            6,4,8, 9, 10, 5, 13, 18, 21, 7, 9
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""box box-solid"">
                    <div class=""box-header"">
                        <h3 class=""box-title"">Sparkline examples</h3");
            WriteLiteral(@">
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-default btn-sm"" data-widget=""remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div id=""myBody"" class=""box-body"">
                        <div class=""row"">
                            <div class=""col-sm-6"">
                                <p>
                                    Mouse speed <span id=""mousespeed"">Loading..</span>
                                </p>
                                <p>
                                    Inline <span class=""sparkline-1"">10,8,9,3,5,8,5</span>
                        ");
            WriteLiteral(@"            line graphs
                                    <span class=""sparkline-1"">8,4,0,0,0,0,1,4,4,10,10,10,10,0,0,0,4,6,5,9,10</span>
                                </p>
                                <p>
                                    Bar charts <span class=""sparkbar"">10,8,9,3,5,8,5</span>
                                    negative values: <span class=""sparkbar"">-3,1,2,0,3,-1</span>
                                    stacked: <span class=""sparkbar"">0:2,2:4,4:2,4:1</span>
                                </p>
                                <p>
                                    Composite inline
                                    <span id=""compositeline"">8,4,0,0,0,0,1,4,4,10,10,10,10,0,0,0,4,6,5,9,10</span>
                                </p>
                                <p>
                                    Inline with normal range
                                    <span id=""normalline"">8,4,0,0,0,0,1,4,4,10,10,10,10,0,0,0,4,6,5,9,10</span>
                                </p>
       ");
            WriteLiteral(@"                         <p>
                                    Composite bar
                                    <span id=""compositebar"">4,6,7,7,4,3,2,1,4</span>
                                </p>
                                <p>
                                    Discrete
                                    <span class=""discrete1"">4,6,7,7,4,3,2,1,4,4,5,6,7,6,6,2,4,5</span><br>
                                    Discrete with threshold
                                    <span id=""discrete2"">4,6,7,7,4,3,2,1,4</span>
                                </p>
                                <p>
                                    Bullet charts<br>
                                    <span class=""sparkbullet"">10,12,12,9,7</span><br>
                                    <span class=""sparkbullet"">14,12,12,9,7</span><br>
                                    <span class=""sparkbullet"">10,12,14,9,7</span><br>
                                </p>
                            </div>
                            <!-- /.c");
            WriteLiteral(@"ol -->
                            <div class=""col-sm-6"">
                                <p>
                                    Customize size and colours
                                    <span id=""linecustom"">10,8,9,3,5,8,5,7</span>
                                </p>
                                <p>
                                    Tristate charts
                                    <span class=""sparktristate"">1,1,0,1,-1,-1,1,-1,0,0,1,1</span><br>
                                    (think games won, lost or drawn)
                                </p>
                                <p>
                                    Tristate chart using a colour map:
                                    <span class=""sparktristatecols"">1,2,0,2,-1,-2,1,-2,0,0,1,1</span>
                                </p>
                                <p>
                                    Box Plot: <span class=""sparkboxplot"">4,27,34,52,54,59,61,68,78,82,85,87,91,93,100</span><br>
                                    Pre-c");
            WriteLiteral(@"omputed box plot <span class=""sparkboxplotraw"">Loading..</span>
                                </p>
                                <p>
                                    Pie charts
                                    <span class=""sparkpie"">1,1,2</span>
                                    <span class=""sparkpie"">1,5</span>
                                    <span class=""sparkpie"">20,50,80</span>
                                </p>
                            </div>
                            <!-- /.col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


");
            DefineSection("Styles", async() => {
                WriteLiteral("\n    <!-- Bootstrap 3.3.7 -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b8893782478d073bbf86c3310d979caffeb2708428353", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Font Awesome -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b8893782478d073bbf86c3310d979caffeb2708429558", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Ionicons -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b8893782478d073bbf86c3310d979caffeb2708430759", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Theme style -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b8893782478d073bbf86c3310d979caffeb2708431963", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- AdminLTE Skins. Choose a skin from the css/skins\n         folder instead of downloading all of them to reduce the load. -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b8893782478d073bbf86c3310d979caffeb2708433276", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src=""https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js""></script>
    <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel=""stylesheet"" href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic"">
");
            }
            );
            WriteLiteral("\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n    <!-- jQuery 3 -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708435170", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Bootstrap 3.3.7 -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708436298", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Slimscroll -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708437421", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- FastClick -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708438543", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- AdminLTE App -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708439668", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- AdminLTE for demo purposes -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708440808", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- jQuery Knob -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708441933", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Sparkline -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8893782478d073bbf86c3310d979caffeb2708443056", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <!-- page script -->
    <script>
  $(function () {
    /* jQueryKnob */

    $("".knob"").knob({
      /*change : function (value) {
       //console.log(""change : "" + value);
       },
       release : function (value) {
       console.log(""release : "" + value);
       },
       cancel : function () {
       console.log(""cancel : "" + this.value);
       },*/
      draw: function () {

        // ""tron"" case
        if (this.$.data('skin') == 'tron') {

          var a = this.angle(this.cv)  // Angle
              , sa = this.startAngle          // Previous start angle
              , sat = this.startAngle         // Start angle
              , ea                            // Previous end angle
              , eat = sat + a                 // End angle
              , r = true;

          this.g.lineWidth = this.lineWidth;

          this.o.cursor
          && (sat = eat - 0.3)
          && (eat = eat + 0.3);

          if (this.o.displayPrevious) {
            ea = this.startAngle + this.angle(this.valu");
                WriteLiteral(@"e);
            this.o.cursor
            && (sa = ea - 0.3)
            && (ea = ea + 0.3);
            this.g.beginPath();
            this.g.strokeStyle = this.previousColor;
            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false);
            this.g.stroke();
          }

          this.g.beginPath();
          this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
          this.g.stroke();

          this.g.lineWidth = 2;
          this.g.beginPath();
          this.g.strokeStyle = this.o.fgColor;
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
          this.g.stroke();

          return false;
        }
      }
    });
    /* END JQUERY KNOB */

    //INITIALIZE SPARKLINE CHARTS
    $("".sparkline"").each(function () {
      var $this = $(this);
      $this.sparkline('html', $this.data());
    });

    /* SPARKLINE");
                WriteLiteral(@" DOCUMENTATION EXAMPLES http://omnipotent.net/jquery.sparkline/#s-about */
    drawDocSparklines();
    drawMouseSpeedDemo();

  });
  function drawDocSparklines() {

    // Bar + line composite charts
    $('#compositebar').sparkline('html', {type: 'bar', barColor: '#aaf'});
    $('#compositebar').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
        {composite: true, fillColor: false, lineColor: 'red'});


    // Line charts taking their values from the tag
    $('.sparkline-1').sparkline();

    // Larger line charts for the docs
    $('.largeline').sparkline('html',
        {type: 'line', height: '2.5em', width: '4em'});

    // Customized line chart
    $('#linecustom').sparkline('html',
        {
          height: '1.5em', width: '8em', lineColor: '#f00', fillColor: '#ffa',
          minSpotColor: false, maxSpotColor: false, spotColor: '#77f', spotRadius: 3
        });

    // Bar charts using inline values
    $('.sparkbar').sparkline('html', {type: 'bar'});

    $('.barformat");
                WriteLiteral(@"').sparkline([1, 3, 5, 3, 8], {
      type: 'bar',
      tooltipFormat: '{{value:levels}} - {{value}}',
      tooltipValueLookups: {
        levels: $.range_map({':2': 'Low', '3:6': 'Medium', '7:': 'High'})
      }
    });

    // Tri-state charts using inline values
    $('.sparktristate').sparkline('html', {type: 'tristate'});
    $('.sparktristatecols').sparkline('html',
        {type: 'tristate', colorMap: {'-2': '#fa7', '2': '#44f'}});

    // Composite line charts, the second using values supplied via javascript
    $('#compositeline').sparkline('html', {fillColor: false, changeRangeMin: 0, chartRangeMax: 10});
    $('#compositeline').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
        {composite: true, fillColor: false, lineColor: 'red', changeRangeMin: 0, chartRangeMax: 10});

    // Line charts with normal range marker
    $('#normalline').sparkline('html',
        {fillColor: false, normalRangeMin: -1, normalRangeMax: 8});
    $('#normalExample').sparkline('html',
       ");
                WriteLiteral(@" {fillColor: false, normalRangeMin: 80, normalRangeMax: 95, normalRangeColor: '#4f4'});

    // Discrete charts
    $('.discrete1').sparkline('html',
        {type: 'discrete', lineColor: 'blue', xwidth: 18});
    $('#discrete2').sparkline('html',
        {type: 'discrete', lineColor: 'blue', thresholdColor: 'red', thresholdValue: 4});

    // Bullet charts
    $('.sparkbullet').sparkline('html', {type: 'bullet'});

    // Pie charts
    $('.sparkpie').sparkline('html', {type: 'pie', height: '1.0em'});

    // Box plots
    $('.sparkboxplot').sparkline('html', {type: 'box'});
    $('.sparkboxplotraw').sparkline([1, 3, 5, 8, 10, 15, 18],
        {type: 'box', raw: true, showOutliers: true, target: 6});

    // Box plot with specific field order
    $('.boxfieldorder').sparkline('html', {
      type: 'box',
      tooltipFormatFieldlist: ['med', 'lq', 'uq'],
      tooltipFormatFieldlistKey: 'field'
    });

    // click event demo sparkline
    $('.clickdemo').sparkline();
    $('.clickdemo').bind('sparklineClic");
                WriteLiteral(@"k', function (ev) {
      var sparkline = ev.sparklines[0],
          region = sparkline.getCurrentRegionFields();
      value = region.y;
      alert(""Clicked on x="" + region.x + "" y="" + region.y);
    });

    // mouseover event demo sparkline
    $('.mouseoverdemo').sparkline();
    $('.mouseoverdemo').bind('sparklineRegionChange', function (ev) {
      var sparkline = ev.sparklines[0],
          region = sparkline.getCurrentRegionFields();
      value = region.y;
      $('.mouseoverregion').text(""x="" + region.x + "" y="" + region.y);
    }).bind('mouseleave', function () {
      $('.mouseoverregion').text('');
    });
  }

  /**
   ** Draw the little mouse speed animated graph
   ** This just attaches a handler to the mousemove event to see
   ** (roughly) how far the mouse has moved
   ** and then updates the display a couple of times a second via
   ** setTimeout()
   **/
  function drawMouseSpeedDemo() {
    var mrefreshinterval = 500; // update display every 500ms
    var lastmousex = -1;
    var lastmo");
                WriteLiteral(@"usey = -1;
    var lastmousetime;
    var mousetravel = 0;
    var mpoints = [];
    var mpoints_max = 30;
    $('html').mousemove(function (e) {
      var mousex = e.pageX;
      var mousey = e.pageY;
      if (lastmousex > -1) {
        mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey));
      }
      lastmousex = mousex;
      lastmousey = mousey;
    });
    var mdraw = function () {
      var md = new Date();
      var timenow = md.getTime();
      if (lastmousetime && lastmousetime != timenow) {
        var pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000);
        mpoints.push(pps);
        if (mpoints.length > mpoints_max)
          mpoints.splice(0, 1);
        mousetravel = 0;
        $('#mousespeed').sparkline(mpoints, {width: mpoints.length * 2, tooltipSuffix: ' pixels per second'});
      }
      lastmousetime = timenow;
      setTimeout(mdraw, mrefreshinterval);
    };
    // We could use setInterval instead, but I prefer to do it this way
    se");
                WriteLiteral("tTimeout(mdraw, mrefreshinterval);\n  }\n    </script>\n");
            }
            );
            WriteLiteral("\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
